

toString 메소드

Integer String toString 메소드를 미리 재정의해 뒀기 때문에
값이 출력됨

JDK에서 제공하는 클래스 toString메소드가 재정의 된 클래스가 많다.
toString 메소드를 직접 재정의하면 객체의 참조변수를 이용해 원하는 문자열을 표현할 수 있다.


equals() 메소드

equals 메소드의 원래 기능은 두 인스턴스의 주소 값을 비교해서 같으면 true 다르면 false
주소 값이 같으면 당연히 같은 인스턴스!
주소 값이 달라도 같은 인스턴스라고 정의 할 수 있는 경우가 있다.
물리적 동일성(인스턴스의 메모리 주소가 같음) 뿐만 아니라
논리적 동일성(논리적으로 두 인스턴스가 같음)을 구현할때도 equals 메소드를 재정의 해서 사용

Object equals 메소드는 두 인스턴스의 주소



hashCode()메소드
해시(hash)는 정보를 저장하거나 검색할때 사용하는 자료구조
정보를 어디에 저장할지 어디서 가져올지 해시 함수를 사용해서 구현함.
해시함수는 객체의 특정 정보(키값)를 매개변수 값으로 넣으면
그 객체가 저장되어야할 위치나 저장된 해시 테이블 주소(위치)를 반환

자바에서는 인스턴스를 힙 메모리에 생생해서 관리할 때 해시 알고리즘을 사용한다.
hashCode = hash(key) // 객체의 해시코드값(메모리 위치 값)이 반환 됨


16진수 숫자 값이 해시코드 값 >> JVM 힙메모리에 저장한 인스턴스 주소값
자바에서는 두 인스턴스 값이 같다면 해시코드 값도 같아야함

논리적으로 같은 객체도 같은 해시코드 값을 반환하도록 hashCode()메소드를 재정의 해야함.
equals() 메소드를 재정의 했다면 hashCode() 메소드도 재정의 해야한다.

즉 equals 메소드가 ture를 반환하는 경우 hashCode 메소드도 동일한 해시코드값을 반환함.


hashCode를 재정의 할때 어떤 값을 반환하는게 합리적일까??
equlas메소드 에서 논리적으로 같다는 것을 구현할때 사용한 멤버 변수를 사용하는게 좋다.



clone() 메소드
객체 원본을 유지해 놓고 복사하거나, 기본틀(prototype)의 복사본을 사용해
동일한 인스턴스를 만들어 생성과정을 간단히 하려는 경우에 clone 메소드를 사용함










