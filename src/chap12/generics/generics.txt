*제네릭이란?

프로그램에서 변수 선언할 때 모든 변수는 자료형이 있음.
메서드에서 매개변수를 사용할때도 자료형이 있음.

필요에 따라서 여러 자료형으로 바꿀 수 있으면
프로그램이 좀 더 유연

어떤 값이 하나의 참조 자료형이 아니라
여러 참조 자료형을 사용 할 수 있도록 프로그래밍 하는것을

제네릭 프로그래밍이라 한다.


3D 프린터 > 재료 가지고 입체 모형 만듦
파우더, 플라스틱 액체

Object 클래스를 사용해서 메소드를 작성하면
다시 원래 자료형으로 반환 해주기 위해서
매번 형 변환을 해야하는 번거로움


여러 참조 자료형이 쓰일 때 특정한 자료형을 지정하지 않고
클래스나 메서드를 정의한 후
사용하는 시점에 어떤 자료형을 사용할 것인지 지정하는 방식


*제네릭 클래스 정의하기

T = type 약자
자료형 매개변수

<> 다이아몬드 연산자


T로 정의한 클래스 부분에 Powder 형을 넣어주고 T형 매개변수가 필요한 메서드에 Powder
클래스를 생성해서 대입 해줌.

실제 제네릭 클래스를 사용할 때 T 위치에 사용한 Powder 형을 '대입된 자료형'
 GenericPrinter<Powder> '제네릭 자료형', '매개변수화 된 자료형'


제네릭에서 대입된 자료형을 명시하지 않는 경우
 >> 이전 버전 호환성을 위해서 제공하는 기능



T 자료형에 사용할 자료형을 제한하는 <T extends 클래스>
Material을 상속받지 않은 재료 클래스는 사용할 수 없다.







